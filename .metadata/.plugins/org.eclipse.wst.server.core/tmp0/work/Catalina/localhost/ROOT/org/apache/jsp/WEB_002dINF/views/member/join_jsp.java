/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.80
 * Generated at: 2023-12-07 03:36:50 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class join_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(6);
    _jspx_dependants.put("jar:file:/D:/juheon/workspace/Javawork/spring/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/Library/WEB-INF/lib/spring-security-taglibs-5.0.7.RELEASE.jar!/META-INF/security.tld", Long.valueOf(1532606274000L));
    _jspx_dependants.put("/WEB-INF/lib/spring-security-taglibs-5.0.7.RELEASE.jar", Long.valueOf(1700445109903L));
    _jspx_dependants.put("jar:file:/D:/juheon/workspace/Javawork/spring/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/Library/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/views/member/../includes/header.jsp", Long.valueOf(1701845507340L));
    _jspx_dependants.put("/WEB-INF/views/member/../includes/footer.jsp", Long.valueOf(1701671146185L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1691733143121L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fsec_005fauthentication_0026_005fproperty_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fchoose;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fotherwise;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fsec_005fauthentication_0026_005fproperty_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fchoose = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fotherwise = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess.release();
    _005fjspx_005ftagPool_005fsec_005fauthentication_0026_005fproperty_005fnobody.release();
    _005fjspx_005ftagPool_005fc_005fchoose.release();
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fotherwise.release();
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("<title>회원가입</title>\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("	href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.3.0/css/all.min.css\">\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"/resources/css/reset.css\">\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"/resources/css/join.css\">\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.6.0.min.js\"></script>\r\n");
      out.write("<script src=\"//t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"/resources/css/reset.css\">\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"/resources/css/header.css\">\r\n");
      out.write("\r\n");
      out.write("<header>\r\n");
      out.write("	<!-- headerTop -->\r\n");
      out.write("	<div class=\"headerTopWrap\">\r\n");
      out.write("		<div class=\"logo\">\r\n");
      out.write("			<a href=\"\"><img src=\"/resources/image/logo.png\" alt=\"logoImg\"></a>\r\n");
      out.write("		</div>\r\n");
      out.write("		<div class=\"headerSerchWrap\">\r\n");
      out.write("			<div class=\"headerSerchBox\">\r\n");
      out.write("				<form id='actionform' action=\"BookServlet?command=book_slist\" method=\"post\"\r\n");
      out.write("					name=\"frm\" class=\"searchWordWrap\">\r\n");
      out.write("					<div class=\"headerSerch\">\r\n");
      out.write("						<input type=\"text\" name=\"searchWord\" class=\"searchWord\"\r\n");
      out.write("							placeholder=\"검색어를 입력하세요.(도서명, 작가, 출판사 등)\">\r\n");
      out.write("					</div>\r\n");
      out.write("					<div class=\"headerSerchBtn\">\r\n");
      out.write("						<button type=\"submit\">\r\n");
      out.write("							<img src=\"/resources/image/serch.jpg\" alt=\"serchIcon\">\r\n");
      out.write("						</button>\r\n");
      out.write("					</div>\r\n");
      out.write("				</form>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("		<div class=\"headerNav1\">\r\n");
      out.write("			");
      if (_jspx_meth_sec_005fauthorize_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("	\r\n");
      out.write("			");
      if (_jspx_meth_sec_005fauthorize_005f1(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("	<!-- headerBottom -->\r\n");
      out.write("	<div class=\"headerBottomWrap\">\r\n");
      out.write("		<div class=\"headerNav2\">\r\n");
      out.write("			<nav>\r\n");
      out.write("				<ul>\r\n");
      out.write("					<li>도서관 안내\r\n");
      out.write("						<ul>\r\n");
      out.write("							<li><a href=\"#\">회원 가입 안내</a></li>\r\n");
      out.write("							<li><a href=\"#\">도서 대여 안내</a></li>\r\n");
      out.write("						</ul>\r\n");
      out.write("					</li>\r\n");
      out.write("					<li>도서검색\r\n");
      out.write("						<ul>\r\n");
      out.write("							<li><a href=\"#\">통합도서 검색</a></li>\r\n");
      out.write("							<li><a href=\"/book/bookRecentList\">신간도서 조회</a></li>\r\n");
      out.write("							<li><a href=\"/book/bookPopularList\">인기도서 조회</a></li>\r\n");
      out.write("						</ul>\r\n");
      out.write("					</li>\r\n");
      out.write("					<li>열린마당\r\n");
      out.write("						<ul>\r\n");
      out.write("							<li><a href=\"/board/list\">공지사항</a></li>\r\n");
      out.write("							<li><a href=\"#\">Q&A</a></li>\r\n");
      out.write("							<li><a href=\"#\">독후감</a></li>\r\n");
      out.write("						</ul>\r\n");
      out.write("					</li>\r\n");
      out.write("					<li>내 서재\r\n");
      out.write("						<ul>\r\n");
      out.write("							<li><a href=\"#\">나의정보</a></li>\r\n");
      out.write("							<li><a href=\"#\">구독내역 조회</a></li>\r\n");
      out.write("							<li><a href=\"/rental/rentList\">대여내역 조회</a></li>\r\n");
      out.write("							<li><a href=\"/return/returnList\">반납현황 조회</a></li>\r\n");
      out.write("							");
      if (_jspx_meth_c_005fchoose_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("						</ul>\r\n");
      out.write("					</li>\r\n");
      out.write("					");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("				</ul>\r\n");
      out.write("			</nav>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	<script type=\"text/javascript\">\r\n");
      out.write("		$(document).ready(function() {\r\n");
      out.write("			// 각 항목에 대한 이벤트 핸들링\r\n");
      out.write("			$('.headerNav2 nav ul li').mouseover(function() {\r\n");
      out.write("				// 마우스 오버 시 실행되는 코드\r\n");
      out.write("				$('.headerNav2 nav ul li ul').css('display', 'block');\r\n");
      out.write("			}).mouseleave(function() {\r\n");
      out.write("				// 마우스 아웃 시 실행되는 코드\r\n");
      out.write("				$('.headerNav2 nav ul li ul').css('display', 'none');\r\n");
      out.write("			});\r\n");
      out.write("		});\r\n");
      out.write("		$(document).ready(function() {\r\n");
      out.write("			// 각 항목에 대한 이벤트 핸들링\r\n");
      out.write("			$('.headerNav2 nav ul li').hover(function() {\r\n");
      out.write("				// 마우스 오버 시 실행되는 코드\r\n");
      out.write("				$(this).find('ul').css('background-color', '#eee');\r\n");
      out.write("			}, function() {\r\n");
      out.write("				// 마우스 아웃 시 실행되는 코드\r\n");
      out.write("				$(this).find('ul').css('background-color', ''); // 기본 배경색으로 변경\r\n");
      out.write("			});\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		//등록하기 버튼누르면 register페이지로 이동\r\n");
      out.write("		$(\"#regBtn\").on(\"click\", function(){\r\n");
      out.write("			self.location =\"/member/modify\";\r\n");
      out.write("		})\r\n");
      out.write("		\r\n");
      out.write("		//로고 누르면 메인화면으로 리다이렉트\r\n");
      out.write("		var actionForm = $(\"#actionform\");\r\n");
      out.write("		 $(document).ready(function() {\r\n");
      out.write("		        $(\".logo\").on(\"click\", function(e) {\r\n");
      out.write("		            e.preventDefault();\r\n");
      out.write("		            \r\n");
      out.write("		            var actionForm = $('<form>', {\r\n");
      out.write("		                'action': '/member/main',\r\n");
      out.write("		                'method': 'post'\r\n");
      out.write("		            });\r\n");
      out.write("		            \r\n");
      out.write("		            actionForm.append('<input type=\"hidden\" name=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${_csrf.parameterName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${_csrf.token}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">');\r\n");
      out.write("\r\n");
      out.write("		            $('body').append(actionForm);\r\n");
      out.write("		            actionForm.submit();\r\n");
      out.write("		        });\r\n");
      out.write("		    });\r\n");
      out.write("		\r\n");
      out.write("	</script>\r\n");
      out.write("\r\n");
      out.write("</header>");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("	<div class=\"shareContainer\">\r\n");
      out.write("		<div class=\"shareImg\" style=\"background: url(/resources/image/svisual_img.png);\"></div>\r\n");
      out.write("		<div class=\"shareContentWrap\">\r\n");
      out.write("			<div class=\"shareNav\">\r\n");
      out.write("				<ul>\r\n");
      out.write("					<li class=\"navTitle\">회원정보</li>\r\n");
      out.write("					<li><span><a href=\"login.jsp\">로그인</a></span></li>\r\n");
      out.write("					<li><span class=\"keyword\"><a href=\"agree.jsp\">회원가입</a></span></li>\r\n");
      out.write("				</ul>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"shareContentBox\">\r\n");
      out.write("				<div class=\"shareContentTitle\">\r\n");
      out.write("					<div class=\"contentTitle\">회원가입</div>\r\n");
      out.write("					<div class=\"contentNav\">\r\n");
      out.write("						<span>홈</span> <i class=\"arrow\"\r\n");
      out.write("							style=\"background: url(/resources/image/ico_naviArrow.png) 0 50% no-repeat;\"></i>\r\n");
      out.write("						<span>회원정보</span> <i class=\"arrow\"\r\n");
      out.write("							style=\"background: url(/resources/image/ico_naviArrow.png) 0 50% no-repeat;\"></i>\r\n");
      out.write("						<span>회원가입</span>\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("\r\n");
      out.write("				<div class=\"shareContent\">\r\n");
      out.write("					<div class=\"joinNav\">\r\n");
      out.write("						<ul>\r\n");
      out.write("							<li>01. 약관동의<img src=\"/resources/image/joinStep_arr.png\" alt=\"navicon\"></li>\r\n");
      out.write("							<li class=\"keyNav\">02. 회원 정보 입력<img\r\n");
      out.write("								src=\"/resources/image/joinStep_arrOn.png\" alt=\"navicon\"></li>\r\n");
      out.write("						</ul>\r\n");
      out.write("					</div>\r\n");
      out.write("					<div class=\"joinTitle\">\r\n");
      out.write("						<h5>회원 정보 입력</h5>\r\n");
      out.write("						<p>*표시가 있는 항목은 필수 입력 항목입니다.</p>\r\n");
      out.write("					</div>\r\n");
      out.write("					<form action=\"/member/join\" method=\"post\" id=\"frm\">\r\n");
      out.write("						<table>\r\n");
      out.write("							<tr>\r\n");
      out.write("								<th>아이디(ID)</th>\r\n");
      out.write("								<td>\r\n");
      out.write("									<input type=\"text\" id=\"memberid\" name=\"memberid\">\r\n");
      out.write("								 	<input class=\"joinBtn\" type=\"button\"  value=\"중복확인\" onclick=\"idCheck()\">\r\n");
      out.write("								</td>\r\n");
      out.write("							</tr>\r\n");
      out.write("							<tr>\r\n");
      out.write("								<th>이름</th>\r\n");
      out.write("								<td><input type=\"text\" name=\"membername\">\r\n");
      out.write("								</td>\r\n");
      out.write("							</tr>\r\n");
      out.write("							<tr>\r\n");
      out.write("								<th>우편번호</th>\r\n");
      out.write("								<td><input type=\"text\"  name=\"postalcode\"\r\n");
      out.write("									maxlength=\"5\" readonly=\"readonly\"> \r\n");
      out.write("								<input class=\"joinBtn\" type=\"button\" value=\"번호검색\" id=\"btn\"></td>\r\n");
      out.write("							</tr>\r\n");
      out.write("							<tr>\r\n");
      out.write("								<th>주소</th>\r\n");
      out.write("								<td><input type=\"text\" name=\"postaladdress\" readonly=\"readonly\"><br></td>\r\n");
      out.write("							</tr>\r\n");
      out.write("							<tr>\r\n");
      out.write("								<th>상세주소</th>\r\n");
      out.write("								<td><input type=\"text\" name=\"detailaddress\"></td>\r\n");
      out.write("							</tr>\r\n");
      out.write("							<tr>\r\n");
      out.write("								<th>전화번호</th>\r\n");
      out.write("								<td><input type=\"text\" name=\"mphone\"></td>\r\n");
      out.write("							</tr>\r\n");
      out.write("							<tr>\r\n");
      out.write("								<th>생년월일</th>\r\n");
      out.write("								<td><input type=\"text\"  name=\"birthdate\"\r\n");
      out.write("									placeholder=\"예시:'1998-05-05'\"></td>\r\n");
      out.write("							</tr>\r\n");
      out.write("							<tr>\r\n");
      out.write("								<th>비밀번호</th>\r\n");
      out.write("								<td><input type=\"password\" name=\"passcode\">\r\n");
      out.write("								</td>\r\n");
      out.write("							</tr>\r\n");
      out.write("							<tr>\r\n");
      out.write("								<th>비밀번호 확인</th>\r\n");
      out.write("								<td><input type=\"password\" id=\"passcode2\">\r\n");
      out.write("								<input class=\"joinBtn\" type=\"button\" value=\"일치확인\" onclick=\"pwCheck()\"></td>\r\n");
      out.write("								</td>\r\n");
      out.write("							</tr>\r\n");
      out.write("							<tr>\r\n");
      out.write("								<th>이메일</th>\r\n");
      out.write("								<td><input type=\"email\" id=\"email\" name=\"email\">\r\n");
      out.write("								 <button type=\"button\" id=\"email_auth_btn\" class=\"email_auth_btn\">인증번호 받기</button>\r\n");
      out.write("								</td>\r\n");
      out.write("							</tr>\r\n");
      out.write("							<tr>\r\n");
      out.write("						        <th>인증번호</th>\r\n");
      out.write("						        <td>       \r\n");
      out.write("						            <input type=\"text\" placeholder=\"인증번호 입력\" id=\"email_auth_key\">\r\n");
      out.write("						        </td>\r\n");
      out.write("						    </tr>\r\n");
      out.write("						</table>\r\n");
      out.write("						<input type=\"hidden\" name=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${_csrf.parameterName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${_csrf.token}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" />\r\n");
      out.write("						<input class=\"joinCheck\" id=\"join\" type=\"submit\" value=\"회원가입 확인\"> 	\r\n");
      out.write("						<input class=\"joinCancel\"type=\"reset\" value=\"취소\">\r\n");
      out.write("					</form>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("	");
      out.write("\r\n");
      out.write("<link rel='stylesheet' type='text/css' href='/resources/css/footer.css'>\r\n");
      out.write("<footer>\r\n");
      out.write("	<div class=\"footerWrap\">\r\n");
      out.write("		<P>\r\n");
      out.write("			<span>이젠도서관</span> (우)16455 경기도 수원시 팔달구 덕영대로 899 (매산로1가, 세진브론즈빌) TEL : 031-253-5225\r\n");
      out.write("			FAX : 031-356-5357<br /> COPYRIGHT&copy; EZENLIBRARY. ALL\r\n");
      out.write("			RIGHTS RESERVERD.\r\n");
      out.write("		</P>\r\n");
      out.write("	</div>\r\n");
      out.write("</footer>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("<script>\r\n");
      out.write("\r\n");
      out.write("<!-- 카카오 우편검색 -->\r\n");
      out.write("const btn = document.querySelector(\"#btn\");\r\n");
      out.write("btn.addEventListener(\"click\", () =>{\r\n");
      out.write("	   new daum.Postcode({\r\n");
      out.write("	        oncomplete: function(data) {\r\n");
      out.write("	        	console.log(data);\r\n");
      out.write("	        	let fullAddr = '';\r\n");
      out.write("	        	let extraAddr = '';\r\n");
      out.write("	        	if(data.userSelectedType == 'R'){\r\n");
      out.write("	        		fullAddr = data.roadAddress;\r\n");
      out.write("	        	}else{\r\n");
      out.write("	        		fullAddr = data.jibunAddress;\r\n");
      out.write("	        	}\r\n");
      out.write("	        	\r\n");
      out.write("	        	if(data.userSelectedType == 'R'){\r\n");
      out.write("	        		if(data.bname !== ''){\r\n");
      out.write("	        			extraAddr += data.bname;\r\n");
      out.write("	        		}\r\n");
      out.write("	        		if(data.buildingName !== ' '){\r\n");
      out.write("	        			extraAddr += (extraAddr !== ''?', '+ data.buildingName : data.buildingName);\r\n");
      out.write("	        		} \r\n");
      out.write("	        		fullAddr += (extraAddr !== '' ? ' (' + extraAddr + ')' : '');	\r\n");
      out.write("	        	}\r\n");
      out.write("	        	\r\n");
      out.write("	        	\r\n");
      out.write("	        	document.getElementsByName(\"postaladdress\")[0].value = fullAddr;\r\n");
      out.write("	        	document.getElementsByName(\"postalcode\")[0].value = data.zonecode;\r\n");
      out.write("	        	// 팝업에서 검색결과 항목을 클릭했을때 실행할 코드를 작성하는 부분입니다.\r\n");
      out.write("	            // 예제를 참고하여 다양한 활용법을 확인해 보세요.\r\n");
      out.write("	            document.getElementsByName(\"detailaddress\")[0].focus();\r\n");
      out.write("	        }\r\n");
      out.write("	    }).open();	\r\n");
      out.write("})\r\n");
      out.write("<!-- 카카오 우편검색 -->\r\n");
      out.write("\r\n");
      out.write("<!-- 중복 검색창 띄우기-->\r\n");
      out.write("function idCheck() {\r\n");
      out.write("	if (document.getElementsByName(\"memberid\")[0].value == \"\") {\r\n");
      out.write("		alert(\"아이디를 입력해주세요.\");\r\n");
      out.write("		document.getElementsByName(\"postaladdress\")[0].focus();\r\n");
      out.write("		return ; \r\n");
      out.write("	}\r\n");
      out.write("	let url = \"/member/IdDuplicationCheck?memberid=\" + document.getElementsByName(\"memberid\")[0].value;\r\n");
      out.write("	window.open(url, \"_blank_1\", \"toolbar=no, menubar=no, scrollbars=yes, resizable=no, width=450, height=200\");\r\n");
      out.write("}\r\n");
      out.write("<!-- 중복 검색창 띄우기-->\r\n");
      out.write("\r\n");
      out.write("<!-- 비밀번호 일치 확인 -->\r\n");
      out.write("function pwCheck() {\r\n");
      out.write("    var passcode1 = document.getElementsByName(\"passcode\")[0].value;\r\n");
      out.write("    var passcode2 = document.getElementById(\"passcode2\").value;\r\n");
      out.write("\r\n");
      out.write("    if (passcode1 !== \"\") {\r\n");
      out.write("        if (passcode1 !== passcode2) {\r\n");
      out.write("            alert(\"비밀번호가 일치하지 않습니다. 다시 입력해주세요.\");\r\n");
      out.write("            // 비밀번호 란 초기화\r\n");
      out.write("            document.getElementsByName(\"passcode\")[0].value = \"\";\r\n");
      out.write("            document.getElementById(\"passcode2\").value = \"\";\r\n");
      out.write("            // 첫 번째 비밀번호 입력란에 포커스\r\n");
      out.write("            document.getElementsByName(\"passcode\")[0].focus();\r\n");
      out.write("        } else {\r\n");
      out.write("            alert(\"비밀번호가 일치합니다.\");\r\n");
      out.write("        }\r\n");
      out.write("    } else {\r\n");
      out.write("        alert(\"비밀번호를 입력해주세요.\");\r\n");
      out.write("    }\r\n");
      out.write("}\r\n");
      out.write("<!-- 비밀번호 일치 확인 -->\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- 이메일 보내기 -->\r\n");
      out.write("var email_auth_cd;\r\n");
      out.write("\r\n");
      out.write("$(\"#email_auth_btn\").click(function () {\r\n");
      out.write("    var email = $('#email').val();\r\n");
      out.write("\r\n");
      out.write("    if (email == '') {\r\n");
      out.write("        alert(\"이메일을 입력해주세요.\");\r\n");
      out.write("        return false;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    $.ajax({\r\n");
      out.write("        type: \"POST\",\r\n");
      out.write("        url: \"/member/emailAuth\",\r\n");
      out.write("        data: { email: email, _csrf: $('input[name=\"_csrf\"]').val()},\r\n");
      out.write("        success: function (data) {\r\n");
      out.write("            alert(\"인증번호가 발송되었습니다.\");\r\n");
      out.write("            email_auth_cd = data;\r\n");
      out.write("        },\r\n");
      out.write("        error: function (data) {\r\n");
      out.write("            alert(\"메일 발송에 실패했습니다.\");\r\n");
      out.write("        }\r\n");
      out.write("    });\r\n");
      out.write("});\r\n");
      out.write("<!-- 이메일 보내기 -->\r\n");
      out.write("//생일양식\r\n");
      out.write("function isValidDate(dateString) {\r\n");
      out.write("	// 생년월일의 유효한 형식을 정의\r\n");
      out.write("	var regex = /^\\d{4}-\\d{2}-\\d{2}$/;\r\n");
      out.write("	return regex.test(dateString);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("//회원가입 체크리스트\r\n");
      out.write("$(\"#join\").click(function (e) {\r\n");
      out.write("	e.preventDefault();\r\n");
      out.write("	if (document.getElementsByName(\"membername\")[0].value == 0) {\r\n");
      out.write("		alert(\"이름을 입력해주세요.\");\r\n");
      out.write("		document.getElementsByName(\"membername\")[0].focus();\r\n");
      out.write("		return false;\r\n");
      out.write("	}\r\n");
      out.write("	if (document.getElementsByName(\"memberid\")[0].value == 0) {\r\n");
      out.write("		alert(\"아이디를 입력해주세요.\");\r\n");
      out.write("		document.getElementsByName(\"memberid\")[0].focus();\r\n");
      out.write("		return false;\r\n");
      out.write("	}\r\n");
      out.write("	if (document.getElementsByName(\"postalcode\")[0].value == 0) {\r\n");
      out.write("		alert(\"우편번호를 입력해주세요.\");\r\n");
      out.write("		document.getElementsByName(\"postalcode\")[0].focus();\r\n");
      out.write("		return false;\r\n");
      out.write("	}\r\n");
      out.write("	if (document.getElementsByName(\"postaladdress\")[0].value == 0) {\r\n");
      out.write("		alert(\"주소를 입력해주세요.\");\r\n");
      out.write("		document.getElementsByName(\"postaladdress\")[0].focus();\r\n");
      out.write("		return false;\r\n");
      out.write("	}\r\n");
      out.write("	if (document.getElementsByName(\"detailaddress\")[0].value == 0) {\r\n");
      out.write("		alert(\"상세주소를 입력해주세요.\");\r\n");
      out.write("		document.getElementsByName(\"detailaddress\")[0].focus();\r\n");
      out.write("		return false;\r\n");
      out.write("	}\r\n");
      out.write("	if (document.getElementsByName(\"mphone\")[0].value == 0) {\r\n");
      out.write("		alert(\"전화번호를 입력해주세요.\");\r\n");
      out.write("		document.getElementsByName(\"mphone\")[0].focus();\r\n");
      out.write("		return false;\r\n");
      out.write("	}\r\n");
      out.write("	var birthdateElement = document.getElementsByName(\"birthdate\")[0].value; // birthdate 요소를 변수에 할당\r\n");
      out.write("	if (!birthdateElement || !isValidDate(birthdateElement)) {\r\n");
      out.write("	    alert(\"올바른 생년월일 형식(YYYY-MM-DD)을 입력해주세요.\");\r\n");
      out.write("	    if (birthdateElement) {\r\n");
      out.write("	        birthdateElement.focus();\r\n");
      out.write("	    }\r\n");
      out.write("	    return false;\r\n");
      out.write("	}\r\n");
      out.write("	if (document.getElementsByName(\"email\")[0].value.length == 0) {\r\n");
      out.write("		alert(\"이메일을 입력해주세요.\");\r\n");
      out.write("		document.getElementsByName(\"email\")[0].focus();\r\n");
      out.write("		return false;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	if (document.getElementsByName(\"passcode\")[0].value !== document.getElementById(\"passcode2\").value ) {\r\n");
      out.write("		alert(\"비밀번호 일치확인을 부탁드립니다.\");\r\n");
      out.write("		document.getElementsByName(\"passcode\")[0].focus();\r\n");
      out.write("		return false;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	if (document.getElementsByName(\"passcode\")[0].value.length == 0) {\r\n");
      out.write("		alert(\"비밀번호를 입력해주세요.\");\r\n");
      out.write("		document.getElementsByName(\"passcode\")[0].focus();\r\n");
      out.write("		return false;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("    if ($('#email_auth_key').val() != email_auth_cd) {\r\n");
      out.write("        alert(\"인증번호가 일치하지 않습니다.\");\r\n");
      out.write("        return false;\r\n");
      out.write("    }\r\n");
      out.write("    var id = $('#memberid').val();\r\n");
      out.write("    \r\n");
      out.write("    $.ajax({\r\n");
      out.write("        type: \"POST\",\r\n");
      out.write("        url: \"/member/idCheck\",\r\n");
      out.write("        data: { id: id, _csrf: $('input[name=\"_csrf\"]').val()},\r\n");
      out.write("        dataType: \"text\",\r\n");
      out.write("        success: function (data) {\r\n");
      out.write("            // 이 부분이 콜백 함수입니다.\r\n");
      out.write("            if (data === \"duplicate\") {\r\n");
      out.write("                alert(\"아이디가 중복되었습니다. 중복확인 부탁드립니다.\");\r\n");
      out.write("               \r\n");
      out.write("            } else {\r\n");
      out.write("                alert(\"회원가입이 완료되었습니다.\");\r\n");
      out.write("                document.getElementById(\"frm\").submit();\r\n");
      out.write("            }\r\n");
      out.write("        },\r\n");
      out.write("        error: function () {\r\n");
      out.write("            alert(\"서버 오류로 회원가입에 실패했습니다.\");\r\n");
      out.write("        }\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("});\r\n");
      out.write("</script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_sec_005fauthorize_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  sec:authorize
    org.springframework.security.taglibs.authz.JspAuthorizeTag _jspx_th_sec_005fauthorize_005f0 = (org.springframework.security.taglibs.authz.JspAuthorizeTag) _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess.get(org.springframework.security.taglibs.authz.JspAuthorizeTag.class);
    boolean _jspx_th_sec_005fauthorize_005f0_reused = false;
    try {
      _jspx_th_sec_005fauthorize_005f0.setPageContext(_jspx_page_context);
      _jspx_th_sec_005fauthorize_005f0.setParent(null);
      // /WEB-INF/views/member/../includes/header.jsp(31,3) name = access type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_sec_005fauthorize_005f0.setAccess("isAnonymous()");
      int _jspx_eval_sec_005fauthorize_005f0 = _jspx_th_sec_005fauthorize_005f0.doStartTag();
      if (_jspx_eval_sec_005fauthorize_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        out.write("\r\n");
        out.write("			<!-- 사용자가 로그인하지 않은 경우 -->\r\n");
        out.write("				<ul>\r\n");
        out.write("					<li><a href=\"/customLogin\">로그인</a></li>\r\n");
        out.write("					<li>|</li>\r\n");
        out.write("					<li>\r\n");
        out.write("						<form action=\"/member/join\" method=\"get\">\r\n");
        out.write("							<button>회원가입</button>\r\n");
        out.write("						</form>\r\n");
        out.write("					</li>\r\n");
        out.write("					<li>|</li>\r\n");
        out.write("					<li><a href=\"\">사이트맵</a></li>\r\n");
        out.write("				</ul>\r\n");
        out.write("			");
      }
      if (_jspx_th_sec_005fauthorize_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess.reuse(_jspx_th_sec_005fauthorize_005f0);
      _jspx_th_sec_005fauthorize_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sec_005fauthorize_005f0, _jsp_getInstanceManager(), _jspx_th_sec_005fauthorize_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_sec_005fauthorize_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  sec:authorize
    org.springframework.security.taglibs.authz.JspAuthorizeTag _jspx_th_sec_005fauthorize_005f1 = (org.springframework.security.taglibs.authz.JspAuthorizeTag) _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess.get(org.springframework.security.taglibs.authz.JspAuthorizeTag.class);
    boolean _jspx_th_sec_005fauthorize_005f1_reused = false;
    try {
      _jspx_th_sec_005fauthorize_005f1.setPageContext(_jspx_page_context);
      _jspx_th_sec_005fauthorize_005f1.setParent(null);
      // /WEB-INF/views/member/../includes/header.jsp(46,3) name = access type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_sec_005fauthorize_005f1.setAccess("isAuthenticated()");
      int _jspx_eval_sec_005fauthorize_005f1 = _jspx_th_sec_005fauthorize_005f1.doStartTag();
      if (_jspx_eval_sec_005fauthorize_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        out.write("\r\n");
        out.write("			<!-- 사용자가 로그인한 경우 -->\r\n");
        out.write("		            <ul>\r\n");
        out.write("		                <li>\r\n");
        out.write("		                    <form action=\"/logout\" method=\"post\">\r\n");
        out.write("		                        <button>로그아웃</button>\r\n");
        out.write("		                        <input type=\"hidden\" name=\"");
        out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${_csrf.parameterName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
        out.write("\" value=\"");
        out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${_csrf.token}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
        out.write("\">\r\n");
        out.write("		                    </form>\r\n");
        out.write("		                </li>\r\n");
        out.write("		                <li>|</li>\r\n");
        out.write("		                <li><button id='regBtn' type=\"button\">정보 수정</button></li>\r\n");
        out.write("		                <li>|</li>\r\n");
        out.write("		                <li><a href=\"\">사이트맵</a></li>\r\n");
        out.write("		            </ul>\r\n");
        out.write("		            <a>안녕하세요, ");
        if (_jspx_meth_sec_005fauthentication_005f0(_jspx_th_sec_005fauthorize_005f1, _jspx_page_context))
          return true;
        out.write("님!</a> \r\n");
        out.write("			");
      }
      if (_jspx_th_sec_005fauthorize_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess.reuse(_jspx_th_sec_005fauthorize_005f1);
      _jspx_th_sec_005fauthorize_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sec_005fauthorize_005f1, _jsp_getInstanceManager(), _jspx_th_sec_005fauthorize_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_sec_005fauthentication_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_sec_005fauthorize_005f1, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  sec:authentication
    org.springframework.security.taglibs.authz.AuthenticationTag _jspx_th_sec_005fauthentication_005f0 = (org.springframework.security.taglibs.authz.AuthenticationTag) _005fjspx_005ftagPool_005fsec_005fauthentication_0026_005fproperty_005fnobody.get(org.springframework.security.taglibs.authz.AuthenticationTag.class);
    boolean _jspx_th_sec_005fauthentication_005f0_reused = false;
    try {
      _jspx_th_sec_005fauthentication_005f0.setPageContext(_jspx_page_context);
      _jspx_th_sec_005fauthentication_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_sec_005fauthorize_005f1);
      // /WEB-INF/views/member/../includes/header.jsp(60,24) name = property type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_sec_005fauthentication_005f0.setProperty("principal.member.membername");
      int _jspx_eval_sec_005fauthentication_005f0 = _jspx_th_sec_005fauthentication_005f0.doStartTag();
      if (_jspx_th_sec_005fauthentication_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fsec_005fauthentication_0026_005fproperty_005fnobody.reuse(_jspx_th_sec_005fauthentication_005f0);
      _jspx_th_sec_005fauthentication_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sec_005fauthentication_005f0, _jsp_getInstanceManager(), _jspx_th_sec_005fauthentication_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fchoose_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:choose
    org.apache.taglibs.standard.tag.common.core.ChooseTag _jspx_th_c_005fchoose_005f0 = (org.apache.taglibs.standard.tag.common.core.ChooseTag) _005fjspx_005ftagPool_005fc_005fchoose.get(org.apache.taglibs.standard.tag.common.core.ChooseTag.class);
    boolean _jspx_th_c_005fchoose_005f0_reused = false;
    try {
      _jspx_th_c_005fchoose_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fchoose_005f0.setParent(null);
      int _jspx_eval_c_005fchoose_005f0 = _jspx_th_c_005fchoose_005f0.doStartTag();
      if (_jspx_eval_c_005fchoose_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("								");
          if (_jspx_meth_c_005fwhen_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("								");
          if (_jspx_meth_c_005fotherwise_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("							");
          int evalDoAfterBody = _jspx_th_c_005fchoose_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fchoose_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fchoose.reuse(_jspx_th_c_005fchoose_005f0);
      _jspx_th_c_005fchoose_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fchoose_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fchoose_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f0 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    boolean _jspx_th_c_005fwhen_005f0_reused = false;
    try {
      _jspx_th_c_005fwhen_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fwhen_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      // /WEB-INF/views/member/../includes/header.jsp(97,8) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fwhen_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginUser.memberflag == null}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fwhen_005f0 = _jspx_th_c_005fwhen_005f0.doStartTag();
      if (_jspx_eval_c_005fwhen_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("									<li><a onclick=\"alert('로그인이 필요합니다.');\">나만의 책장</a></li>\r\n");
          out.write("								");
          int evalDoAfterBody = _jspx_th_c_005fwhen_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fwhen_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f0);
      _jspx_th_c_005fwhen_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fwhen_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fotherwise_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:otherwise
    org.apache.taglibs.standard.tag.common.core.OtherwiseTag _jspx_th_c_005fotherwise_005f0 = (org.apache.taglibs.standard.tag.common.core.OtherwiseTag) _005fjspx_005ftagPool_005fc_005fotherwise.get(org.apache.taglibs.standard.tag.common.core.OtherwiseTag.class);
    boolean _jspx_th_c_005fotherwise_005f0_reused = false;
    try {
      _jspx_th_c_005fotherwise_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fotherwise_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      int _jspx_eval_c_005fotherwise_005f0 = _jspx_th_c_005fotherwise_005f0.doStartTag();
      if (_jspx_eval_c_005fotherwise_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("									<li><a href=\"BookServlet?command=wish_lists\">나만의 책장</a></li>\r\n");
          out.write("								");
          int evalDoAfterBody = _jspx_th_c_005fotherwise_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fotherwise_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fotherwise.reuse(_jspx_th_c_005fotherwise_005f0);
      _jspx_th_c_005fotherwise_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fotherwise_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fotherwise_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f0_reused = false;
    try {
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent(null);
      // /WEB-INF/views/member/../includes/header.jsp(106,5) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginUser.memberflag == 01}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("						<li class=\"hiddenNav\"><a\r\n");
          out.write("							href=\"BookServlet?command=admin_main\">관리자 페이지</a>\r\n");
          out.write("							<ul>\r\n");
          out.write("								<li><a href=\"BookServlet?command=book_insert_form\">도서관리</a></li>\r\n");
          out.write("								<li><a href=\"BookServlet?command=subscr_list\">구독권관리</a></li>\r\n");
          out.write("							</ul></li>\r\n");
          out.write("					");
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      _jspx_th_c_005fif_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
    }
    return false;
  }
}
